name: Build and Release

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

# Add permissions for the GITHUB_TOKEN
permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: |
          package-lock.json
          game-launcher-app/package-lock.json
    
    - name: Install root dependencies
      run: npm ci
      
    - name: Install app dependencies
      run: |
        cd game-launcher-app
        npm ci
        
    - name: Build app
      run: |
        cd game-launcher-app
        npm run build
        
    # Only build (not publish) on regular pushes
    - name: Build Electron app (no publish)
      if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
      run: |
        cd game-launcher-app
        npm run package
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Upload artifacts
      if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
      uses: actions/upload-artifact@v4
      with:
        name: game-launcher-${{ github.sha }}
        path: game-launcher-app/release/*.exe
        
  release:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: |
          package-lock.json
          game-launcher-app/package-lock.json
    
    - name: Install dependencies
      run: |
        npm ci
        cd game-launcher-app
        npm ci
        
    - name: Build app
      run: |
        cd game-launcher-app
        npm run build
        
    # Create a draft release first
    - name: Create Draft Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        draft: true
        prerelease: false
        
    - name: Build and publish
      run: |
        cd game-launcher-app
        npm run package
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    # Publish the release after successful build
    - name: Publish Release
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const { data: releases } = await github.rest.repos.listReleases({
            owner: context.repo.owner,
            repo: context.repo.repo,
          });
          
          const draftRelease = releases.find(release => 
            release.draft && release.tag_name === context.ref.replace('refs/tags/', '')
          );
          
          if (draftRelease) {
            await github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: draftRelease.id,
              draft: false
            });
          } 