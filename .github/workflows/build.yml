name: Build and Release

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

# Add permissions for the GITHUB_TOKEN
permissions:
  contents: write
  packages: write
  actions: read
  id-token: write

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: write
      packages: write
      actions: read
      id-token: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: |
          package-lock.json
          game-launcher-app/package-lock.json
    
    - name: Install root dependencies
      run: npm ci
      
    - name: Install app dependencies
      run: |
        cd game-launcher-app
        npm ci
        
    - name: Build app
      run: |
        cd game-launcher-app
        npm run build
        
    # Only build (not publish) on regular pushes
    - name: Build Electron app (no publish)
      if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
      run: |
        cd game-launcher-app
        npm run build-only
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Upload artifacts
      if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
      uses: actions/upload-artifact@v4
      with:
        name: game-launcher-${{ github.sha }}
        path: game-launcher-app/release/*.exe
        
  release:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: windows-latest
    permissions:
      contents: write
      packages: write
      actions: read
      id-token: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: |
          package-lock.json
          game-launcher-app/package-lock.json

    - name: Create Release
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Check if release already exists
        $ErrorActionPreference = "SilentlyContinue"
        $releaseExists = gh release view ${{ github.ref_name }} 2>$null
        if ($LASTEXITCODE -eq 0) {
          Write-Host "Release ${{ github.ref_name }} already exists"
        } else {
          Write-Host "Creating new release ${{ github.ref_name }}"
          gh release create ${{ github.ref_name }} `
            --title "Release ${{ github.ref_name }}" `
            --notes "Release ${{ github.ref_name }}" `
            --draft=false `
            --prerelease=false
        }

    - name: Install dependencies
      run: |
        npm ci
        cd game-launcher-app
        npm ci
        
    - name: Build app
      run: |
        cd game-launcher-app
        npm run build
        
    # Build and publish using electron-builder directly
    - name: Build and publish
      id: electron_builder
      continue-on-error: true
      run: |
        cd game-launcher-app
        npm run package
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload to Release (fallback)
      if: steps.electron_builder.outcome == 'failure'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        cd game-launcher-app
        Write-Host "Electron-builder failed, trying manual upload..."
        # Build without publishing first
        npm run build-only
        # Find the built files and upload them
        Get-ChildItem -Path "release\*.exe" | ForEach-Object {
          Write-Host "Uploading $($_.Name) to release ${{ github.ref_name }}"
          gh release upload ${{ github.ref_name }} "$($_.FullName)" --clobber
        }
        Get-ChildItem -Path "release\*.exe.blockmap" | ForEach-Object {
          Write-Host "Uploading $($_.Name) to release ${{ github.ref_name }}"
          gh release upload ${{ github.ref_name }} "$($_.FullName)" --clobber
        } 